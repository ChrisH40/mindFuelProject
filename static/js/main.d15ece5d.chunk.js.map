{"version":3,"sources":["components/settings.js","components/drawUtil.js","components/moveUtil.js","components/Canvas.js","components/CustomMoveCtrl.js","App.js","serviceWorker.js","index.js"],"names":["UNIT","Math","floor","SIZE","cellSize","ctx","x","y","fillStyle","lineStyle","labelFillStyle","fillRect","lineWidth","beginPath","moveTo","font","setLineDash","i","lineTo","fillText","DIMENSION","strokeStyle","stroke","x1","y1","x2","y2","x3","y3","closePath","fill","text","PI","mapToCanvasCoords","gameCoords","mapped","Object","entries","key","value","includes","mapToGameCoords","canvasCoords","reorgCoords","coords","reorgedCoords","coordPair","slice","length","assign","xr","yr","deg","rotated","sinDeg","sin","cosDeg","cos","idx","pt","xu","yu","mapToGameCoordsInPixel","translated","gameCoordsInPixel","mapToCanvasCoordsFromPixel","a","b","c","reflected","Canvas","props","canvasEl","useRef","useEffect","current","getContext","clearRect","width","height","d","triangleCoords","lose","target","win","id","ref","style","border","CustomMoveCtrl","movement","translate","reflect","rotate","onDragOver","ev","preventDefault","cursor","onDrop","category","name","dataTransfer","getData","selectedMove","moves","filter","move","moveType","reflectX","reflectY","cre","ixt","iyt","ixro","iyro","rotateFactor","updatedMoves","item","setMoves","displayMoves","preStage","staged","forEach","t","push","onDragStart","e","setData","draggable","className","App","iX","iY","useState","setCoords","setWin","setLose","winLoseCheck","tri","exit","JSON","stringify","undefined","find","xUnit","yUnit","transformedCoords","m","onClick","window","location","reload","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d15ece5d.chunk.js","sourcesContent":["// Grid size\r\nexport const SIZE = 800;\r\n// Grid to border margin\r\nexport const GRID_MARGIN = SIZE * 0.025;\r\n// Units for x, y axis\r\nexport const DIMENSION = 20;\r\nexport const UNIT = Math.floor(SIZE / DIMENSION);\r\n// Shape of object (not limited to triangle), points coords in counter-clock wise order\r\n// (iX, iY) is the first point of the object, defaut setting: a 3-4-5 triangle\r\nexport const initTriangleShape = (iX, iY) => {\r\n  return {\r\n    x1: iX,\r\n    y1: iY,\r\n    x2: iX,\r\n    y2: iY + UNIT * 3,\r\n    x3: iX + UNIT * 4,\r\n    y3: iY + UNIT * 3\r\n  };\r\n};\r\n\r\nexport const AXIS_LABEL_SIZE = \"1.1em\";","import { SIZE, GRID_MARGIN, DIMENSION, AXIS_LABEL_SIZE } from \"./settings\";\r\n\r\nconst cellSize = Math.floor(SIZE / DIMENSION);\r\n\r\nexport default {\r\n\r\n  getCanvasXYOffset: canvas => {\r\n    return {\r\n      x: Math.floor(canvas.getBoundingClientRect().x),\r\n      y: Math.floor(canvas.getBoundingClientRect().y)\r\n    };\r\n  },\r\n\r\n  drawDot: (x = GRID_MARGIN, y = GRID_MARGIN, ctx) => {\r\n    ctx.fillStyle = \"orange\";\r\n    ctx.fillRect(x, y, 10, 10);\r\n  },\r\n\r\n  drawGrid: ({\r\n    ctx,\r\n    x = GRID_MARGIN,\r\n    y = GRID_MARGIN,\r\n    fillStyle = \"rgba(255,255,255,1)\",\r\n    lineStyle = \"black\",\r\n    labelFillStyle = \"black\"\r\n  }) => {\r\n    ctx.fillStyle = fillStyle;\r\n    ctx.fillRect(x, y, SIZE, SIZE);\r\n    ctx.lineWidth = 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.font = `${AXIS_LABEL_SIZE} menlo`;\r\n    ctx.setLineDash([2, 2]);\r\n    for (let i = 0; i <= DIMENSION; i++) {\r\n      ctx.moveTo(x, y + cellSize * i);\r\n      ctx.lineTo(x + SIZE, y + cellSize * i);\r\n      ctx.fillStyle = labelFillStyle;\r\n      ctx.fillText(\r\n        `${\r\n        i === DIMENSION / 2\r\n          ? \"\"\r\n          : i < DIMENSION / 2\r\n            ? DIMENSION / 2 - i\r\n            : -i + DIMENSION / 2\r\n        }`,\r\n        x + (cellSize * DIMENSION) / 2 + 5,\r\n        y + cellSize * i + 5\r\n      );\r\n    }\r\n    ctx.moveTo(x, y);\r\n    for (let i = 0; i <= DIMENSION; i++) {\r\n      ctx.moveTo(x + cellSize * i, y);\r\n      ctx.strokeStyle = lineStyle;\r\n      ctx.lineTo(x + cellSize * i, y + SIZE);\r\n      ctx.fillText(\r\n        `${i <= DIMENSION / 2 ? -DIMENSION / 2 + i : i - DIMENSION / 2}`,\r\n        x + cellSize * i - 12,\r\n        y + (cellSize * DIMENSION) / 2 + 17\r\n      );\r\n    }\r\n    ctx.stroke();\r\n  },\r\n\r\n  drawAxis: ({\r\n    ctx,\r\n    x = GRID_MARGIN,\r\n    y = GRID_MARGIN,\r\n    lineStyle = \"black\"\r\n  }) => {\r\n    ctx.setLineDash([0]);\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + (cellSize * DIMENSION) / 2, y);\r\n    ctx.lineTo(x + (cellSize * DIMENSION) / 2, y + cellSize * DIMENSION);\r\n    ctx.moveTo(x, y + (cellSize * DIMENSION) / 2);\r\n    ctx.lineTo(x + cellSize * DIMENSION, y + (cellSize * DIMENSION) / 2);\r\n    ctx.strokeStyle = lineStyle;\r\n    ctx.stroke();\r\n  },\r\n\r\n  drawTriangle: ({ x1, y1, x2, y2, x3, y3, ctx, lineStyle, fillStyle}) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = lineStyle;\r\n    ctx.fillStyle = fillStyle;\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.lineTo(x3, y3);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.fill();\r\n  },\r\n\r\n  drawText: ({ ctx, fillStyle, text }) => {\r\n    ctx.fillStyle = fillStyle;\r\n    ctx.font = \"30px Arial\";\r\n    ctx.fillText(text.text, text.x, text.y);   \r\n  }\r\n};\r\n","import { SIZE, UNIT, GRID_MARGIN } from \"./settings\";\r\n\r\n// Object.size = obj => {\r\n//   let size = 0,\r\n//     key;\r\n//   for (key in obj) {\r\n//     if (obj.hasOwnProperty(key)) size++;\r\n//   }\r\n//   return size;\r\n// };\r\n\r\n// const round = Math.round;\r\nconst PI = Math.PI;\r\n\r\nexport const mapToCanvasCoordsFromPixel = gameCoordsInPixel => {\r\n  const mapped = {};\r\n  for (let [key, value] of Object.entries(gameCoordsInPixel)) {\r\n    if (key.includes(\"x\")) mapped[key] = SIZE / 2 + value + GRID_MARGIN;\r\n    else mapped[key] = SIZE / 2 - value + GRID_MARGIN;\r\n  }\r\n  return mapped;\r\n};\r\n\r\nexport const mapToCanvasCoords = gameCoords => {\r\n  const mapped = {};\r\n  for (let [key, value] of Object.entries(gameCoords)) {\r\n    if (key.includes(\"x\")) mapped[key] = value * UNIT + SIZE / 2 + GRID_MARGIN;\r\n    else mapped[key] = SIZE / 2 - value * UNIT + GRID_MARGIN;\r\n  }\r\n  return mapped;\r\n};\r\n\r\nexport const mapToGameCoords = canvasCoords => {\r\n  const mapped = {};\r\n  for (let [key, value] of Object.entries(canvasCoords)) {\r\n    if (key.includes(\"x\"))\r\n      mapped[key] = (value - SIZE / 2 - GRID_MARGIN) / UNIT;\r\n    else mapped[key] = (SIZE / 2 + GRID_MARGIN - value) / UNIT;\r\n  }\r\n  return mapped;\r\n};\r\n\r\nexport const mapToGameCoordsInPixel = canvasCoords => {\r\n  const mapped = {};\r\n  for (let [key, value] of Object.entries(canvasCoords)) {\r\n    if (key.includes(\"x\")) mapped[key] = value - SIZE / 2 - GRID_MARGIN;\r\n    else mapped[key] = SIZE / 2 + GRID_MARGIN - value;\r\n  }\r\n  return mapped;\r\n};\r\n\r\nexport const distance = (x1, y1, x2, y2) => {\r\n  return Number(\r\n    Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)).toFixed(2)\r\n  );\r\n};\r\n\r\n// export const translateHelper = (canvasCoords, xu, yu) => {\r\n//   const translated = {};\r\n//   for (let [key, value] of Object.entries(canvasCoords)) {\r\n//     if (key.includes(\"x\")) {\r\n//       translated[key] = value + xu * UNIT;\r\n//     } else {\r\n//       translated[key] = value + yu * UNIT;\r\n//     }\r\n//   }\r\n//   return translated;\r\n// };\r\n\r\n// change shape from { x1:.., y1:.., x2:.., y2:..} to {1:{x:..,y..}, 2:{x:..,y:..}}\r\nexport const reorgCoords = coords => {\r\n  const reorgedCoords = {};\r\n  for (let [key, value] of Object.entries(coords)) {\r\n    const coordPair = {};\r\n    coordPair[`${key.slice(0, 1)}`] = value;\r\n    reorgedCoords[`${key.slice(key.length - 1)}`] = Object.assign(\r\n      {\r\n        ...reorgedCoords[`${key.slice(key.length - 1)}`]\r\n      },\r\n      coordPair\r\n    );\r\n  }\r\n  return reorgedCoords;\r\n};\r\n\r\nexport default {\r\n  rotate: (coords, xr, yr, deg) => {\r\n    // all in game coords\r\n    // x1' = (x1 - xr)cos(deg) - (y1 - yr)sin(deg) + xr\r\n    // y1' = (x1 - xr)sin(deg) + (y1 - yr)cos(deg) + yr\r\n    const rotated = {};\r\n    let sinDeg = Math.sin((deg / 180) * PI);\r\n    let cosDeg = Math.cos((deg / 180) * PI);\r\n    coords = reorgCoords(mapToGameCoords(coords));\r\n    for (let [idx, pt] of Object.entries(coords)) {\r\n      rotated[`x${idx}`] = (pt.x - xr) * cosDeg - (pt.y - yr) * sinDeg + xr;\r\n      rotated[`y${idx}`] = (pt.x - xr) * sinDeg + (pt.y - yr) * cosDeg + yr;\r\n    }\r\n    return mapToCanvasCoords(rotated);\r\n  },\r\n\r\n  translate: (coords, xu, yu) => {\r\n    coords = mapToGameCoordsInPixel(coords);\r\n    const translated = {};\r\n    for (let [key, value] of Object.entries(coords)) {\r\n      if (key.includes(\"x\")) {\r\n        translated[key] = value + xu * UNIT;\r\n      } else {\r\n        translated[key] = value + yu * UNIT;\r\n      }\r\n    }\r\n    return mapToCanvasCoordsFromPixel(translated);\r\n  },\r\n\r\n  reflect: (coords, a, b, c) => {\r\n    const reflected = {};\r\n    coords = reorgCoords(mapToGameCoords(coords));\r\n    for (let [idx, pt] of Object.entries(coords)) {\r\n      reflected[`x${idx}`] =\r\n        ((b * b - a * a) * pt.x - 2 * a * b * pt.y - 2 * a * c) /\r\n        (a * a + b * b);\r\n      reflected[`y${idx}`] =\r\n        ((a * a - b * b) * pt.y - 2 * a * b * pt.x - 2 * b * c) /\r\n        (a * a + b * b);\r\n    }\r\n    return mapToCanvasCoords(reflected);\r\n  }\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport d from \"./drawUtil\";\r\nimport { mapToCanvasCoords } from \"./moveUtil\";\r\nimport \"./Canvas.css\";\r\nimport \"tachyons\";\r\n\r\nconst Canvas = props => {\r\n  const canvasEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // check if the browser supports canvas\r\n    if (canvasEl.current.getContext) {\r\n      var ctx = canvasEl.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasEl.current.width, canvasEl.current.height);\r\n      // draw a 10 x 10 (by default) grid\r\n      d.drawGrid({\r\n        ctx,\r\n        labelFillStyle: \"orange\",\r\n        lineStyle: \"#ddd\",\r\n        fillStyle: \"rgba(0,0,0,.2)\"\r\n      });\r\n      d.drawAxis({ ctx, lineStyle: \"#000\" });\r\n      // draw starting triangle\r\n      d.drawTriangle({\r\n        ...props.triangleCoords,\r\n        ctx,\r\n        lineStyle: (props.lose === true ? \"red\" : \"rgb(155,189,238)\"),\r\n        fillStyle: (props.lose === true ? \"red\" : \"rgba(155, 189,238,0.8)\"),\r\n        text: { text: \"\", x: null, y: null } \r\n      });\r\n      // draw target triangle\r\n      d.drawTriangle({\r\n        ...mapToCanvasCoords(props.target),\r\n        ctx,\r\n        lineStyle: (props.win === true ? \"greenyellow\" : \"rgb(188,198,34)\"),\r\n        fillStyle: (props.win === true ? \"greenyellow\" : \"rgba(188,198,34, 0.8)\"),\r\n      });\r\n      // draw exit text\r\n      d.drawText({\r\n        ctx,\r\n        fillStyle: \"black\",\r\n        text: { text:\"Exit\", x: 740, y: 760 }\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <canvas\r\n      id=\"canvas\"\r\n      ref={canvasEl}\r\n      width={props.width}\r\n      height={props.width * 1}\r\n      style={{ border: \"1px solid black\" }}\r\n    >\r\n      Please switch to browser that supports canvas API\r\n    </canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"tachyons\";\r\n\r\nconst CustomMoveCtrl = props => {\r\n  const [translate, reflect, rotate] = props.movement;\r\n\r\n  //-----------------------block code starts--------------------------------------------------\r\n  let onDragOver = ev => {\r\n    ev.preventDefault();\r\n    ev.target.style.cursor = \"grabbing\";\r\n  };\r\n\r\n  let onDragStart = (ev, name) => {\r\n    ev.dataTransfer.setData(\"id\", name);\r\n  };\r\n\r\n  let onDrop = (ev, category) => {\r\n    let name = ev.dataTransfer.getData(\"id\");\r\n    let selectedMove = props.moves.filter(move => {\r\n      if (move.name === name) {\r\n        move.category = category;\r\n        if (move.category === \"staged\" && move.moveType === \"reflect\") {\r\n          reflect(props.triangleCoords, move.reflectX, move.reflectY, move.cre);\r\n        }\r\n        if (move.category === \"staged\" && move.moveType === \"translate\") {\r\n          translate(props.triangleCoords, move.ixt, move.iyt);\r\n        }\r\n        if (move.category === \"staged\" && move.moveType === \"rotate\") {\r\n          rotate(props.triangleCoords, move.ixro, move.iyro, move.rotateFactor);\r\n        }\r\n      }\r\n    });\r\n    let updatedMoves = [...props.moves]; //copy old array data\r\n\r\n    for (let item of updatedMoves) {\r\n      if (item.name === selectedMove.name) {\r\n        item = selectedMove;\r\n      }\r\n    }\r\n    props.setMoves(updatedMoves);\r\n  };\r\n\r\n  let displayMoves = {\r\n    preStage: [],\r\n    staged: []\r\n  };\r\n  props.moves.forEach(t => {\r\n    displayMoves[t.category].push(\r\n      <div\r\n        key={t.name}\r\n        onDragStart={\r\n          t.category === \"staged\" ? null : e => onDragStart(e, t.name)\r\n        }\r\n        draggable\r\n        className={\"draggable \" + t.style + \" tc f5 pa0\"}\r\n      >\r\n        {t.name}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  //-----------------------block code ends--------------------------------------------------\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-container\">\r\n        <h2 className=\"tc f3 pa0\">Please Select A Move</h2>\r\n        {\r\n          //original controller goes here\r\n        }\r\n        <span className=\"move-header\">Moves:</span>\r\n        <div\r\n          className=\"preStage\"\r\n          onDragOver={e => onDragOver(e)}\r\n          onDrop={e => {\r\n            onDrop(e, \"preStage\");\r\n          }}\r\n        >\r\n          {displayMoves.preStage}\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-container\">\r\n        <span className=\"move-header\">Drop Here:</span>\r\n        <div\r\n          className=\"droppable\"\r\n          onDragOver={e => onDragOver(e)}\r\n          onDrop={e => onDrop(e, \"staged\")}\r\n        >\r\n          {displayMoves.staged}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomMoveCtrl;\r\n\r\n//------------------------old handlers for advanced menu---------------------------------------\r\n// const ixt = useRef(null);\r\n// const iyt = useRef(null);\r\n// const ixro = useRef(null);\r\n// const iyro = useRef(null);\r\n// const cre = useRef(null);\r\n\r\n// let [rotateDirection, setRotateDirection] = useState(null);\r\n// let [rotateFactor, setRotateFactor] = useState(\"90\");\r\n// let [reflectAxis, setReflectAxis] = useState(null);\r\n\r\n// const handleTranslate = () => {\r\n//   if (ixt.current.value === \"\" || iyt.current.value === \"\") return;\r\n//   translate(\r\n//     props.triangleCoords,\r\n//     Number(ixt.current.value),\r\n//     Number(iyt.current.value)\r\n//   );\r\n//   ixt.current.value = 0;\r\n//   iyt.current.value = 0;\r\n//   // console.log(ixt.current.value, iyt.current.value);\r\n// };\r\n\r\n// const handleRotate = () => {\r\n//   if (!rotateDirection) {\r\n//     console.log(rotateDirection)\r\n//     return\r\n//   }\r\n//   else if (rotateDirection === \"optionClockwise\") {\r\n//     rotate(\r\n//       props.triangleCoords,\r\n//       Number(ixro.current.value),\r\n//       Number(iyro.current.value),\r\n//       Number(-rotateFactor)\r\n//     );\r\n//     ixro.current.value = 0;\r\n//     iyro.current.value = 0;\r\n//     setRotateDirection(null);\r\n//     setRotateFactor(\"90\");\r\n//   }\r\n//   else if (rotateDirection === \"optionCounterClockwise\") {\r\n//     rotate(\r\n//       props.triangleCoords,\r\n//       Number(ixro.current.value),\r\n//       Number(iyro.current.value),\r\n//       Number(rotateFactor)\r\n//     );\r\n//     ixro.current.value = 0;\r\n//     iyro.current.value = 0;\r\n//     setRotateDirection(null);\r\n//     setRotateFactor(\"90\");\r\n//     // console.log(ixro.current.value, iyro.current.value, degro.current.value);\r\n//   }\r\n// };\r\n\r\n// const handleReflect = () => {\r\n//   if (!reflectAxis) {\r\n//     return\r\n//   }\r\n//   else {\r\n//     reflect(\r\n//       props.triangleCoords,\r\n//       reflectAxis === \"optionX\" ? Number(1) : 0,\r\n//       reflectAxis === \"optionY\" ? Number(1) : 0,\r\n//       cre.current.value == \"\" ? 0 : Number(-cre.current.value)\r\n//     );\r\n//     cre.current.value = 0;\r\n//     setReflectAxis(null);\r\n//   }\r\n// };\r\n\r\n//--------------------------old return code for advanced menu-------------------------------\r\n\r\n// {/* <div className=\"tc custom-ops\"> */}\r\n// <div className=\"translate-container bg-washed-red\">\r\n//   {/* <div className=\"translate ma2 bg-washed-red\"> */}\r\n//   <text className=\"menu-header\">Translate</text><br />\r\n//   <label htmlFor=\"xUnitt\">\r\n//     X:\r\n//     <input\r\n//       className=\"menu-item\"\r\n//       type=\"number\"\r\n//       min={-DIMENSION / 2}\r\n//       max={DIMENSION / 2}\r\n//       id=\"xUnitt\"\r\n//       ref={ixt}\r\n//       defaultValue=\"0\"\r\n//     />\r\n//   </label>\r\n//   <label htmlFor=\"yUnitt\">\r\n//     Y:\r\n//     <input\r\n//       className=\"menu-item\"\r\n//       type=\"number\"\r\n//       id=\"yUnitt\"\r\n//       min={-DIMENSION / 2}\r\n//       max={DIMENSION / 2}\r\n//       ref={iyt}\r\n//       defaultValue=\"0\"\r\n//     />\r\n//   </label>\r\n//   <br />\r\n//   <button className=\"menu-button\" onClick={handleTranslate}>Translate</button>\r\n//   {/* </div> */}\r\n// </div>\r\n// <div className=\"rotate-container bg-washed-green\">\r\n//   {/* <div className=\"rotate ma2 bg-washed-green\"> */}\r\n//   <text className=\"menu-header\">Rotate 90°</text><br />\r\n//   <label htmlFor=\"degro\">\r\n//     Clockwise\r\n//         <input\r\n//       className=\"menu-item\"\r\n//       type=\"radio\"\r\n//       value=\"optionClockwise\"\r\n//       checked={rotateDirection === \"optionClockwise\"}\r\n//       onChange={(event) => { setRotateDirection(event.target.value) }} />\r\n//     Counter Clockwise\r\n//         <input\r\n//       className=\"menu-item\"\r\n//       type=\"radio\"\r\n//       value=\"optionCounterClockwise\"\r\n//       checked={rotateDirection === \"optionCounterClockwise\"}\r\n//       onChange={(event) => { setRotateDirection(event.target.value) }} />\r\n//     Factor\r\n//         <select\r\n//       className=\"menu-item\"\r\n//       onChange={(event) => { setRotateFactor(event.target.value) }}\r\n//       value={rotateFactor}\r\n//       defaultValue=\"90\">\r\n//       <option value=\"90\">1</option>\r\n//       <option value=\"180\">2</option>\r\n//       <option value=\"270\">3</option>\r\n//       <option value=\"360\">4</option>\r\n//     </select>\r\n//     <br />\r\n//     Focal Point&nbsp;\r\n//         <label htmlFor=\"xUnitro\">\r\n//       X:\r\n//         <input\r\n//         className=\"menu-item\"\r\n//         type=\"number\"\r\n//         min={-DIMENSION / 2}\r\n//         max={DIMENSION / 2}\r\n//         id=\"xUnitro\"\r\n//         ref={ixro}\r\n//         defaultValue=\"0\"\r\n//       />\r\n//     </label>\r\n//     <label htmlFor=\"yUnitro\">\r\n//       Y:\r\n//         <input\r\n//         className=\"menu-item\"\r\n//         type=\"number\"\r\n//         min={-DIMENSION / 2}\r\n//         max={DIMENSION / 2}\r\n//         id=\"yUnitro\"\r\n//         ref={iyro}\r\n//         defaultValue=\"0\"\r\n//       />\r\n//     </label>\r\n//     {/* deg:\r\n//         <input type=\"number\" id=\"degro\" ref={degro} defaultValue=\"90\" /> */}\r\n//   </label>\r\n//   {/* </div> */}\r\n//   <br />\r\n//   <button className=\"menu-button\" onClick={handleRotate}>Rotate</button>\r\n// </div>\r\n// <div className=\"reflect-container bg-lightest-blue\">\r\n//   {/* <div className=\"reflect ma2 bg-lightest-blue\"> */}\r\n//   <text className=\"menu-header\">Reflect</text><br />\r\n//   <label htmlFor=\"are\">\r\n//     X-Axis\r\n//         <input\r\n//       className=\"menu-item\"\r\n//       type=\"radio\"\r\n//       value=\"optionX\"\r\n//       checked={reflectAxis === 'optionX'}\r\n//       onChange={(event) => { setReflectAxis(event.target.value) }} />\r\n//   </label>\r\n//   {/* <span className=\"f4\">or</span> */}\r\n//   <label htmlFor=\"bre\">\r\n//     Y-Axis\r\n//         <input\r\n//       className=\"menu-item\"\r\n//       type=\"radio\"\r\n//       value=\"optionY\"\r\n//       checked={reflectAxis === 'optionY'}\r\n//       onChange={(event) => { setReflectAxis(event.target.value) }} />\r\n//   </label>\r\n//   <label htmlFor=\"cre\">\r\n//     <input\r\n//       className=\"menu-item\"\r\n//       type=\"number\"\r\n//       min={-DIMENSION / 2}\r\n//       max={DIMENSION / 2}\r\n//       id=\"cre\"\r\n//       ref={cre}\r\n//       defaultValue=\"0\"\r\n//     />\r\n//     + / -\r\n//       </label>\r\n//   <br />\r\n//   <button className=\"menu-button\" onClick={handleReflect}>Reflect</button>\r\n//   {/* </div> */}\r\n// </div>\r\n// {/* </div> */}\r\n","import React, { useState } from \"react\";\r\nimport { SIZE, GRID_MARGIN, initTriangleShape } from \"./components/settings\";\r\nimport Canvas from \"./components/Canvas\";\r\nimport CustomMoveCtrl from \"./components/CustomMoveCtrl\";\r\nimport m, { mapToGameCoords } from \"./components/moveUtil\";\r\n\r\nconst App = () => {\r\n  // --- This becomes part of Level Object/State/Array Package ---\r\n  const [x1, y1] = [GRID_MARGIN, GRID_MARGIN];\r\n  const target = { x1: 10, y1: -6, x2: 10, y2: -9, x3: 6, y3: -9 };\r\n  let [coords, setCoords] = useState(initTriangleShape(x1, y1));\r\n  let [moves, setMoves] = useState([\r\n    { name: \"Translate X Axis 5, Y Axis -3\", category: \"preStage\", moveType: \"translate\", ixt: 5, iyt: -3, style: \"translate\" },\r\n    { name: \"Reflect Y Axis \", category: \"preStage\", moveType: \"reflect\", reflectX: 1, reflectY: 0, cre: 0, style: \"reflect\" },\r\n    { name: \"Translate X Axis 0, Y Axis -7\", category: \"preStage\", moveType: \"translate\", ixt: 0, iyt: -7, style: \"translate\" },\r\n    { name: \"Rotate 180° Origin (0, 0) Clockwise\", category: \"preStage\", moveType: \"rotate\", ixro: 0, iyro: 0, rotateFactor: 180, style: \"rotate\" },\r\n    { name: \"Reflect X Axis \", category: \"preStage\", moveType: \"reflect\", reflectX: 0, reflectY: 1, cre: 0, style: \"reflect\" },\r\n    { name: \"Rotate 90° Origin (0, 0) Clockwise\", category: \"preStage\", moveType: \"rotate\", ixro: 0, iyro: 0, rotateFactor: -90, style: \"rotate\" },\r\n    { name: \"Translate X Axis 0, Y Axis -9\", category: \"preStage\", moveType: \"translate\", ixt: 0, iyt: -9, style: \"translate\" },\r\n  ]);\r\n  let [win, setWin] = useState(false);\r\n  let [lose, setLose] = useState(false);\r\n  // --- ---\r\n\r\n  const handleRestart = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const translate = (triangleCoords, xUnit, yUnit) => {\r\n    let transformedCoords = m.translate(triangleCoords, xUnit, yUnit);\r\n    setCoords(coords = transformedCoords);\r\n    winLoseCheck(transformedCoords, target);\r\n  };\r\n\r\n  const rotate = (triangleCoords, xUnit, yUnit, deg) => {\r\n    let transformedCoords = m.rotate(triangleCoords, xUnit, yUnit, deg);\r\n    setCoords(coords = transformedCoords);\r\n    winLoseCheck(transformedCoords, target);\r\n  };\r\n\r\n  const reflect = (triangleCoords, a, b, c) => {\r\n    let transformedCoords = m.reflect(triangleCoords, a, b, c);\r\n    setCoords(coords = transformedCoords);\r\n    winLoseCheck(transformedCoords, target);\r\n  };\r\n\r\n  const winLoseCheck = (tri, exit) => {\r\n    tri = mapToGameCoords(tri)\r\n    if (JSON.stringify(tri) === JSON.stringify(exit)) {\r\n      setWin(true);\r\n    }\r\n    else {\r\n      let movesLeft = moves.find(move => move.category === \"preStage\");\r\n      if (movesLeft === undefined && win === false) {\r\n        setLose(true);\r\n      }\r\n      else return;\r\n    }\r\n  };\r\n\r\n  const PopUp = () => (\r\n    <div className='popup'>\r\n      <div className='popup_inner'>\r\n        <h1 className={win === true ? \"win-font\" : \"lose-font\"}>{win === true ? \"You Win!\" : \"You Ran Out Of Moves :(\"}</h1>\r\n        <button className=\"restart-button\" onClick={() => handleRestart()}>Play Again?</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Canvas\">\r\n        <div\r\n          className=\"sans-serif\"\r\n          style={{\r\n            // position: \"absolute\",\r\n            // top: \"50%\",\r\n            // left: \"50%\",\r\n            // transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          <Canvas\r\n            triangleCoords={coords}\r\n            target={target}\r\n            width={SIZE + GRID_MARGIN * 2}\r\n            win={win}\r\n            lose={lose}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"right-container\">\r\n        <CustomMoveCtrl\r\n          triangleCoords={coords}\r\n          movement={[translate, reflect, rotate]}\r\n          moves={moves}\r\n          setMoves={setMoves}\r\n        />\r\n      </div>\r\n      <div>\r\n        {win === true || lose === true ? <PopUp /> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}